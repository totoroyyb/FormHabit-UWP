<Page
    x:Class="FormHabit.Views.CalenderView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:FormHabit.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:FormHabit.ViewModels"
    xmlns:model="using:FormHabit.Models"
    xmlns:converter="using:FormHabit.Converter"
    xmlns:muxcontrols="using:Windows.UI.Xaml.Controls"
    mc:Ignorable="d" Loaded="Page_Loaded"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.DataContext>
        <vm:CalenderViewModel/>
    </Page.DataContext>

    <Page.Resources>
        <converter:ToggleToVisibility x:Key="ToggleConverter"/>

        <muxcontrols:CommandBarFlyout Placement="Right" x:Name="CommandBarFlyout1">
            <AppBarButton Label="Share" Icon="Share" ToolTipService.ToolTip="Share"/>
            <AppBarButton Label="Save" Icon="Save" ToolTipService.ToolTip="Save"/>
            <AppBarButton Label="Delete" Icon="Delete" ToolTipService.ToolTip="Delete"/>
            <muxcontrols:CommandBarFlyout.SecondaryCommands>
                <AppBarButton x:Name="ResizeButton1" Label="Resize"/>
                <AppBarButton x:Name="MoveButton1" Label="Move"/>
            </muxcontrols:CommandBarFlyout.SecondaryCommands>
        </muxcontrols:CommandBarFlyout>

    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <CalendarView x:Name="CalView"
            SelectionMode="Single" 
            IsGroupLabelVisible="True"
            IsOutOfScopeEnabled="True"
            Language="en"
            CalendarIdentifier="GregorianCalendar"
            SelectedDatesChanged="CalView_SelectedDatesChanged"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"/>

        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Button x:Name="addEventButton" Content="&#xE109;" FontFamily="Segoe MDL2 Assets" HorizontalAlignment="Right"
                    Height="45" Width="45" Style="{ThemeResource ButtonRevealStyle}" BorderThickness="1">
                <Button.Flyout>
                    <Flyout x:Name="addButtonFlyout">
                        <StackPanel>
                            <TextBlock Style="{ThemeResource HeaderTextBlockStyle}" Text="Add New Event" Margin="20"/>

                            <TextBox x:Name="nameBlock" Header="Event Name:" PlaceholderText="Please enter the event name" Margin="0, 0, 0, 15"/>

                            <ToggleSwitch x:Name="repeatToggle" Header="Is a Repeat Event?" OffContent="No" OnContent="Yes" IsOn="False"
                                          Margin="0, 0, 0, 15"/>

                            <ListBox x:Name="dayListBox" SelectionMode="Multiple" Visibility="{x:Bind repeatToggle.IsOn, Mode=OneWay, Converter={StaticResource ToggleConverter}}"
                                     Margin="0, 0, 0, 15">
                                <x:String>Monday</x:String>
                                <x:String>Tuesday</x:String>
                                <x:String>Wednesday</x:String>
                                <x:String>Thursday</x:String>
                                <x:String>Firday</x:String>
                                <x:String>Saturday</x:String>
                                <x:String>Sunday</x:String>
                            </ListBox>

                            <ToggleSwitch x:Name="durationToggle" Header="Do you want to set up a expect duration?" OffContent="No" OnContent="Yes" IsOn="False"
                                          Margin="0, 0, 0, 15"/>

                            <TimePicker x:Name="durationPicker" ClockIdentifier="24HourClock" Visibility="{x:Bind durationToggle.IsOn, Mode=OneWay, Converter={StaticResource ToggleConverter}}"
                                        Margin="0, 0, 0, 15"/>

                            <ToggleSwitch x:Name="startToggle" Header="Do you want to set up start time?" OffContent="No" OnContent="Yes" IsOn="False"
                                          Margin="0, 0, 0, 15"/>

                            <DatePicker x:Name="startTimePicker" Visibility="{x:Bind startToggle.IsOn, Mode=OneWay, Converter={StaticResource ToggleConverter}}"
                                        Margin="0, 0, 0, 15"/>

                            
                            <Button x:Name="addEventConfirmButton" FontSize="15" Content="Save" Margin="0, 5, 0, 5"
                                    Click="AddEventConfirmButton_Click"/>
                            
                            
                        </StackPanel>
                    </Flyout>
                </Button.Flyout>
            </Button>

            <ListView x:Name="CalListView" Grid.Row="1" RightTapped="CalListView_RightTapped"
                      ItemsSource="{x:Bind ViewModel.TodayEventsCollcetion, Mode=OneWay}">
                <ListView.Background>
                    <AcrylicBrush BackgroundSource="HostBackdrop"
                                  TintColor="Black"
                                  TintOpacity="0.6"
                                  FallbackColor="Black"/>
                    
                </ListView.Background>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListView.ItemContainerStyle>

                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="model:Event">
                        <Grid Margin="0, 10, 0, 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel>
                                <TextBlock Text="{x:Bind startTime.Date.ToShortTimeString(), Mode=OneWay}"/>
                                <TextBlock Text="-" Margin="10,0,10,0" HorizontalAlignment="Center"/>
                                <TextBlock Text="{x:Bind endTime.Date.ToShortTimeString(), Mode=OneWay}"/>
                            </StackPanel>

                            <StackPanel Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <TextBlock Text="{x:Bind title, Mode=OneWay}" TextWrapping="Wrap" MaxLines="2" Margin="5"
                                           FontWeight="Bold"/>
                                <StackPanel Orientation="Horizontal" Margin="5">
                                    <TextBlock Text="Average Finish Time (min): " Margin="0, 0, 5, 0"/>
                                    <TextBlock Text="{x:Bind avgTime, Mode=OneWay}"/>
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
    </Grid>
</Page>
